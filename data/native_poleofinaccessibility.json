{"Title": "Pole of inaccessibility", "Abstract": "This algorithm calculates the pole of inaccessibility for a polygon layer, which is the most distant internal point from the boundary of the surface. This algorithm uses the 'polylabel' algorithm (Vladimir Agafonkin, 2016), which is an iterative approach guaranteed to find the true pole of inaccessibility within a specified tolerance (in layer units). More precise tolerances require more iterations and will take longer to calculate.\n\nThe distance from the calculated pole to the polygon boundary will be stored as a new attribute in the output layer.", "Identifier": "native:poleofinaccessibility", "Input": [[{"Title": "INPUT"}, {"Abstract": "Input layer"}, {"Identifier": "INPUT"}, {"Parameter type": "QgsProcessingParameterFeatureSource"}, {"Accepted data types": [{"str": "layer ID"}, {"str": "layer name"}, {"str": "layer source"}, "QgsProcessingFeatureSourceDefinition", "QgsProperty", "QgsVectorLayer"]}], [{"Title": "TOLERANCE"}, {"Abstract": "Tolerance"}, {"Identifier": "TOLERANCE"}, {"Parameter type": "QgsProcessingParameterDistance"}, {"Accepted data types": ["int", "float", "QgsProperty"]}], [{"Title": "OUTPUT"}, {"Abstract": "Point"}, {"Identifier": "OUTPUT"}, {"Parameter type": "QgsProcessingParameterFeatureSink"}, {"Accepted data types": [{"str": "destination vector file, e.g. 'd:/test.shp'"}, {"str": "'memory:' to store result in temporary memory layer"}, {"str": "using vector provider ID prefix and destination URI, e.g. 'postgres:\u2026' to store result in PostGIS table"}, "QgsProcessingOutputLayerDefinition", "QgsProperty"]}]], "Outputs": [{"Title": "OUTPUT"}, {"Abstract": "Point"}, {"Parameter type": "QgsProcessingOutputVectorLayer"}]}